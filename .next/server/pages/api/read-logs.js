"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/read-logs";
exports.ids = ["pages/api/read-logs"];
exports.modules = {

/***/ "(api-node)/./lib/database.js":
/*!*************************!*\
  !*** ./lib/database.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addCachedConversion: () => (/* binding */ addCachedConversion),\n/* harmony export */   clearAllCachedConversions: () => (/* binding */ clearAllCachedConversions),\n/* harmony export */   clearCachedConversions: () => (/* binding */ clearCachedConversions),\n/* harmony export */   getCachedTotal: () => (/* binding */ getCachedTotal),\n/* harmony export */   getGlobalCachedTotal: () => (/* binding */ getGlobalCachedTotal),\n/* harmony export */   getPool: () => (/* binding */ getPool),\n/* harmony export */   getRecentLogs: () => (/* binding */ getRecentLogs),\n/* harmony export */   initializeDatabase: () => (/* binding */ initializeDatabase),\n/* harmony export */   logConversion: () => (/* binding */ logConversion),\n/* harmony export */   logPostback: () => (/* binding */ logPostback)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n// File: lib/database.js\n\n// Database connection configuration\nconst dbConfig = {\n    host: process.env.DB_HOST,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_NAME,\n    port: process.env.DB_PORT || 3306,\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n    // Disable SSL since GoDaddy server doesn't support it\n    ssl: false\n};\n// Create connection pool\nlet pool;\nfunction getPool() {\n    if (!pool) {\n        pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createPool(dbConfig);\n    }\n    return pool;\n}\n// Initialize database tables\nasync function initializeDatabase() {\n    const connection = await getPool().getConnection();\n    try {\n        // Create cached_conversions table\n        await connection.execute(`\n      CREATE TABLE IF NOT EXISTS cached_conversions (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        clickid VARCHAR(255) NOT NULL,\n        amount DECIMAL(10,2) NOT NULL,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        INDEX idx_clickid (clickid),\n        INDEX idx_created_at (created_at)\n      )\n    `);\n        // Create conversion_logs table\n        await connection.execute(`\n      CREATE TABLE IF NOT EXISTS conversion_logs (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        clickid VARCHAR(255),\n        original_amount DECIMAL(10,2),\n        cached_amount DECIMAL(10,2),\n        total_sent DECIMAL(10,2),\n        action VARCHAR(50),\n        message TEXT,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        INDEX idx_clickid (clickid),\n        INDEX idx_created_at (created_at)\n      )\n    `);\n        // Create postback_history table\n        await connection.execute(`\n      CREATE TABLE IF NOT EXISTS postback_history (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        clickid VARCHAR(255) NOT NULL,\n        amount DECIMAL(10,2) NOT NULL,\n        postback_url TEXT,\n        success BOOLEAN DEFAULT FALSE,\n        response_text TEXT,\n        error_message TEXT,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        INDEX idx_clickid (clickid),\n        INDEX idx_success (success),\n        INDEX idx_created_at (created_at)\n      )\n    `);\n        console.log('Database tables initialized successfully');\n    } catch (error) {\n        console.error('Error initializing database:', error);\n        throw error;\n    } finally{\n        connection.release();\n    }\n}\n// Database helper functions\nasync function addCachedConversion(clickid, amount) {\n    const connection = await getPool().getConnection();\n    try {\n        const [result] = await connection.execute('INSERT INTO cached_conversions (clickid, amount) VALUES (?, ?)', [\n            clickid,\n            amount\n        ]);\n        return result.insertId;\n    } finally{\n        connection.release();\n    }\n}\nasync function getGlobalCachedTotal() {\n    const connection = await getPool().getConnection();\n    try {\n        const [rows] = await connection.execute('SELECT COALESCE(SUM(amount), 0) as total FROM cached_conversions');\n        return parseFloat(rows[0].total);\n    } finally{\n        connection.release();\n    }\n}\nasync function clearAllCachedConversions() {\n    const connection = await getPool().getConnection();\n    try {\n        const [result] = await connection.execute('DELETE FROM cached_conversions');\n        return result.affectedRows;\n    } finally{\n        connection.release();\n    }\n}\nasync function getCachedTotal(clickid) {\n    // For backward compatibility, but now returns global total\n    return await getGlobalCachedTotal();\n}\nasync function clearCachedConversions(clickid) {\n    // For backward compatibility, but now clears all cache\n    return await clearAllCachedConversions();\n}\nasync function logConversion(data) {\n    const connection = await getPool().getConnection();\n    try {\n        const [result] = await connection.execute(`INSERT INTO conversion_logs \n       (clickid, original_amount, cached_amount, total_sent, action, message) \n       VALUES (?, ?, ?, ?, ?, ?)`, [\n            data.clickid || null,\n            data.original_amount || null,\n            data.cached_amount || null,\n            data.total_sent || null,\n            data.action || '',\n            data.message || ''\n        ]);\n        return result.insertId;\n    } finally{\n        connection.release();\n    }\n}\nasync function logPostback(clickid, amount, postback_url, success, response_text = null, error_message = null) {\n    const connection = await getPool().getConnection();\n    try {\n        const [result] = await connection.execute(`INSERT INTO postback_history \n       (clickid, amount, postback_url, success, response_text, error_message) \n       VALUES (?, ?, ?, ?, ?, ?)`, [\n            clickid,\n            amount,\n            postback_url,\n            success,\n            response_text,\n            error_message\n        ]);\n        return result.insertId;\n    } finally{\n        connection.release();\n    }\n}\nasync function getRecentLogs(limit = 100) {\n    const connection = await getPool().getConnection();\n    try {\n        const [rows] = await connection.execute(`SELECT * FROM conversion_logs \n       ORDER BY created_at DESC \n       LIMIT ?`, [\n            limit\n        ]);\n        return rows;\n    } finally{\n        connection.release();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/database.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fread-logs&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fread-logs.js&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fread-logs&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fread-logs.js&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_read_logs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/api/read-logs.js */ \"(api-node)/./pages/api/read-logs.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_read_logs_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_read_logs_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/read-logs\",\n        pathname: \"/api/read-logs\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_read_logs_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/read-logs\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/read-logs\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGcmVhZC1sb2dzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZyZWFkLWxvZ3MuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXVEO0FBQ0M7QUFDdUM7QUFDckM7QUFDMUQ7QUFDcUQ7QUFDbUI7QUFDRjtBQUN0RTtBQUNBLGlFQUFlLHdFQUFLLENBQUMsb0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLG9EQUFRO0FBQ3BDO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osYUFBYSxPQUFvQyxJQUFJLENBQUU7QUFDdkQsd0JBQXdCLE1BQXVDO0FBQy9ELENBQUM7QUFDTTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxLQUFxQixFQUFFLEVBRTFCO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHdEQUF3RDtBQUNwRTtBQUNBO0FBQ0EsdUJBQXVCLDRFQUFTO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLDZDQUE2QyxFQUE2QztBQUMxRiw0Q0FBNEMsS0FBd0M7QUFDcEYsaUNBQWlDLEtBQW9DO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxnRkFBYztBQUMvRSwrREFBK0QseUNBQXlDO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLFFBQVEsRUFBRSxNQUFNO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0Esa0JBQWtCO0FBQ2xCLHVDQUF1QyxRQUFRLEVBQUUsUUFBUTtBQUN6RDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDViw2RUFBNkUsZ0ZBQWM7QUFDM0YsaUNBQWlDLFFBQVEsRUFBRSxRQUFRO0FBQ25ELDBCQUEwQix1RUFBUTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHFFQUFTO0FBQ2pCLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZW5kRXJyb3IgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9hcGktdXRpbHNcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL3JlYWQtbG9ncy5qc1wiO1xuaW1wb3J0IHsgZ2V0VHJhY2VyLCBTcGFuS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi90cmFjZS90cmFjZXJcIjtcbmltcG9ydCB7IEJhc2VTZXJ2ZXJTcGFuIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3RyYWNlL2NvbnN0YW50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCAnZGVmYXVsdCcpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgJ2NvbmZpZycpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9yZWFkLWxvZ3NcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9yZWFkLWxvZ3NcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZCxcbiAgICBkaXN0RGlyOiBwcm9jZXNzLmVudi5fX05FWFRfUkVMQVRJVkVfRElTVF9ESVIgfHwgJycsXG4gICAgcmVsYXRpdmVQcm9qZWN0RGlyOiBwcm9jZXNzLmVudi5fX05FWFRfUkVMQVRJVkVfUFJPSkVDVF9ESVIgfHwgJydcbn0pO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMsIGN0eCkge1xuICAgIGxldCBzcmNQYWdlID0gXCIvYXBpL3JlYWQtbG9nc1wiO1xuICAgIC8vIHR1cmJvcGFjayBkb2Vzbid0IG5vcm1hbGl6ZSBgL2luZGV4YCBpbiB0aGUgcGFnZSBuYW1lXG4gICAgLy8gc28gd2UgbmVlZCB0byB0byBwcm9jZXNzIGR5bmFtaWMgcm91dGVzIHByb3Blcmx5XG4gICAgLy8gVE9ETzogZml4IHR1cmJvcGFjayBwcm92aWRpbmcgZGlmZmVyaW5nIHZhbHVlIGZyb20gd2VicGFja1xuICAgIGlmIChwcm9jZXNzLmVudi5UVVJCT1BBQ0spIHtcbiAgICAgICAgc3JjUGFnZSA9IHNyY1BhZ2UucmVwbGFjZSgvXFwvaW5kZXgkLywgJycpIHx8ICcvJztcbiAgICB9XG4gICAgY29uc3QgcHJlcGFyZVJlc3VsdCA9IGF3YWl0IHJvdXRlTW9kdWxlLnByZXBhcmUocmVxLCByZXMsIHtcbiAgICAgICAgc3JjUGFnZVxuICAgIH0pO1xuICAgIGlmICghcHJlcGFyZVJlc3VsdCkge1xuICAgICAgICByZXMuc3RhdHVzQ29kZSA9IDQwMDtcbiAgICAgICAgcmVzLmVuZCgnQmFkIFJlcXVlc3QnKTtcbiAgICAgICAgY3R4LndhaXRVbnRpbCA9PSBudWxsID8gdm9pZCAwIDogY3R4LndhaXRVbnRpbC5jYWxsKGN0eCwgUHJvbWlzZS5yZXNvbHZlKCkpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHsgcXVlcnksIHBhcmFtcywgcHJlcmVuZGVyTWFuaWZlc3QsIHJvdXRlclNlcnZlckNvbnRleHQgfSA9IHByZXBhcmVSZXN1bHQ7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgbWV0aG9kID0gcmVxLm1ldGhvZCB8fCAnR0VUJztcbiAgICAgICAgY29uc3QgdHJhY2VyID0gZ2V0VHJhY2VyKCk7XG4gICAgICAgIGNvbnN0IGFjdGl2ZVNwYW4gPSB0cmFjZXIuZ2V0QWN0aXZlU2NvcGVTcGFuKCk7XG4gICAgICAgIGNvbnN0IG9uUmVxdWVzdEVycm9yID0gcm91dGVNb2R1bGUuaW5zdHJ1bWVudGF0aW9uT25SZXF1ZXN0RXJyb3IuYmluZChyb3V0ZU1vZHVsZSk7XG4gICAgICAgIGNvbnN0IGludm9rZVJvdXRlTW9kdWxlID0gYXN5bmMgKHNwYW4pPT5yb3V0ZU1vZHVsZS5yZW5kZXIocmVxLCByZXMsIHtcbiAgICAgICAgICAgICAgICBxdWVyeToge1xuICAgICAgICAgICAgICAgICAgICAuLi5xdWVyeSxcbiAgICAgICAgICAgICAgICAgICAgLi4ucGFyYW1zXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwYXJhbXMsXG4gICAgICAgICAgICAgICAgYWxsb3dlZFJldmFsaWRhdGVIZWFkZXJLZXlzOiBwcm9jZXNzLmVudi5fX05FWFRfQUxMT1dFRF9SRVZBTElEQVRFX0hFQURFUlMsXG4gICAgICAgICAgICAgICAgbXVsdGlab25lRHJhZnRNb2RlOiBCb29sZWFuKHByb2Nlc3MuZW52Ll9fTkVYVF9NVUxUSV9aT05FX0RSQUZUX01PREUpLFxuICAgICAgICAgICAgICAgIHRydXN0SG9zdEhlYWRlcjogcHJvY2Vzcy5lbnYuX19ORVhUX1RSVVNUX0hPU1RfSEVBREVSLFxuICAgICAgICAgICAgICAgIC8vIFRPRE86IGdldCB0aGlzIGZyb20gZnJvbSBydW50aW1lIGVudiBzbyBtYW5pZmVzdFxuICAgICAgICAgICAgICAgIC8vIGRvZXNuJ3QgbmVlZCB0byBsb2FkXG4gICAgICAgICAgICAgICAgcHJldmlld1Byb3BzOiBwcmVyZW5kZXJNYW5pZmVzdC5wcmV2aWV3LFxuICAgICAgICAgICAgICAgIHByb3BhZ2F0ZUVycm9yOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBkZXY6IHJvdXRlTW9kdWxlLmlzRGV2LFxuICAgICAgICAgICAgICAgIHBhZ2U6IFwiL2FwaS9yZWFkLWxvZ3NcIixcbiAgICAgICAgICAgICAgICBpbnRlcm5hbFJldmFsaWRhdGU6IHJvdXRlclNlcnZlckNvbnRleHQgPT0gbnVsbCA/IHZvaWQgMCA6IHJvdXRlclNlcnZlckNvbnRleHQucmV2YWxpZGF0ZSxcbiAgICAgICAgICAgICAgICBvbkVycm9yOiAoLi4uYXJncyk9Pm9uUmVxdWVzdEVycm9yKHJlcSwgLi4uYXJncylcbiAgICAgICAgICAgIH0pLmZpbmFsbHkoKCk9PntcbiAgICAgICAgICAgICAgICBpZiAoIXNwYW4pIHJldHVybjtcbiAgICAgICAgICAgICAgICBzcGFuLnNldEF0dHJpYnV0ZXMoe1xuICAgICAgICAgICAgICAgICAgICAnaHR0cC5zdGF0dXNfY29kZSc6IHJlcy5zdGF0dXNDb2RlLFxuICAgICAgICAgICAgICAgICAgICAnbmV4dC5yc2MnOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJvb3RTcGFuQXR0cmlidXRlcyA9IHRyYWNlci5nZXRSb290U3BhbkF0dHJpYnV0ZXMoKTtcbiAgICAgICAgICAgICAgICAvLyBXZSB3ZXJlIHVuYWJsZSB0byBnZXQgYXR0cmlidXRlcywgcHJvYmFibHkgT1RFTCBpcyBub3QgZW5hYmxlZFxuICAgICAgICAgICAgICAgIGlmICghcm9vdFNwYW5BdHRyaWJ1dGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJvb3RTcGFuQXR0cmlidXRlcy5nZXQoJ25leHQuc3Bhbl90eXBlJykgIT09IEJhc2VTZXJ2ZXJTcGFuLmhhbmRsZVJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBVbmV4cGVjdGVkIHJvb3Qgc3BhbiB0eXBlICcke3Jvb3RTcGFuQXR0cmlidXRlcy5nZXQoJ25leHQuc3Bhbl90eXBlJyl9Jy4gUGxlYXNlIHJlcG9ydCB0aGlzIE5leHQuanMgaXNzdWUgaHR0cHM6Ly9naXRodWIuY29tL3ZlcmNlbC9uZXh0LmpzYCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3Qgcm91dGUgPSByb290U3BhbkF0dHJpYnV0ZXMuZ2V0KCduZXh0LnJvdXRlJyk7XG4gICAgICAgICAgICAgICAgaWYgKHJvdXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBgJHttZXRob2R9ICR7cm91dGV9YDtcbiAgICAgICAgICAgICAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGVzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICduZXh0LnJvdXRlJzogcm91dGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAnaHR0cC5yb3V0ZSc6IHJvdXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ25leHQuc3Bhbl9uYW1lJzogbmFtZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgc3Bhbi51cGRhdGVOYW1lKG5hbWUpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4udXBkYXRlTmFtZShgJHttZXRob2R9ICR7cmVxLnVybH1gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgLy8gVE9ETzogYWN0aXZlU3BhbiBjb2RlIHBhdGggaXMgZm9yIHdoZW4gd3JhcHBlZCBieVxuICAgICAgICAvLyBuZXh0LXNlcnZlciBjYW4gYmUgcmVtb3ZlZCB3aGVuIHRoaXMgaXMgbm8gbG9uZ2VyIHVzZWRcbiAgICAgICAgaWYgKGFjdGl2ZVNwYW4pIHtcbiAgICAgICAgICAgIGF3YWl0IGludm9rZVJvdXRlTW9kdWxlKGFjdGl2ZVNwYW4pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYXdhaXQgdHJhY2VyLndpdGhQcm9wYWdhdGVkQ29udGV4dChyZXEuaGVhZGVycywgKCk9PnRyYWNlci50cmFjZShCYXNlU2VydmVyU3Bhbi5oYW5kbGVSZXF1ZXN0LCB7XG4gICAgICAgICAgICAgICAgICAgIHNwYW5OYW1lOiBgJHttZXRob2R9ICR7cmVxLnVybH1gLFxuICAgICAgICAgICAgICAgICAgICBraW5kOiBTcGFuS2luZC5TRVJWRVIsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICdodHRwLm1ldGhvZCc6IG1ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICdodHRwLnRhcmdldCc6IHJlcS51cmxcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIGludm9rZVJvdXRlTW9kdWxlKSk7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgLy8gd2UgcmUtdGhyb3cgaW4gZGV2IHRvIHNob3cgdGhlIGVycm9yIG92ZXJsYXlcbiAgICAgICAgaWYgKHJvdXRlTW9kdWxlLmlzRGV2KSB7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICAgICAgLy8gdGhpcyBpcyB0ZWNobmljYWxseSBhbiBpbnZhcmlhbnQgYXMgZXJyb3IgaGFuZGxpbmdcbiAgICAgICAgLy8gc2hvdWxkIGJlIGRvbmUgaW5zaWRlIG9mIGFwaS1yZXNvbHZlciBvbkVycm9yXG4gICAgICAgIHNlbmRFcnJvcihyZXMsIDUwMCwgJ0ludGVybmFsIFNlcnZlciBFcnJvcicpO1xuICAgIH0gZmluYWxseXtcbiAgICAgICAgLy8gV2UgZG9uJ3QgYWxsb3cgYW55IHdhaXRVbnRpbCB3b3JrIGluIHBhZ2VzIEFQSSByb3V0ZXMgY3VycmVudGx5XG4gICAgICAgIC8vIHNvIGlmIGNhbGxiYWNrIGlzIHByZXNlbnQgcmV0dXJuIHdpdGggcmVzb2x2ZWQgcHJvbWlzZSBzaW5jZSBub1xuICAgICAgICAvLyBwZW5kaW5nIHdvcmtcbiAgICAgICAgY3R4LndhaXRVbnRpbCA9PSBudWxsID8gdm9pZCAwIDogY3R4LndhaXRVbnRpbC5jYWxsKGN0eCwgUHJvbWlzZS5yZXNvbHZlKCkpO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fread-logs&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fread-logs.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/read-logs.js":
/*!********************************!*\
  !*** ./pages/api/read-logs.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_database_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/database.js */ \"(api-node)/./lib/database.js\");\n// File: pages/api/read-logs.js\n\nasync function handler(req, res) {\n    try {\n        const limit = parseInt(req.query.limit) || 100;\n        const logs = await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.getRecentLogs)(limit);\n        if (logs.length === 0) {\n            return res.status(200).json({\n                logs: [],\n                message: 'No logs found. Try making a conversion request first.',\n                count: 0\n            });\n        }\n        // Format logs for display\n        const formattedLogs = logs.map((log)=>{\n            const timestamp = new Date(log.created_at).toISOString();\n            let logLine = `[${timestamp}] ${log.action.toUpperCase()}`;\n            if (log.clickid) {\n                logLine += ` (${log.clickid})`;\n            }\n            if (log.original_amount) {\n                logLine += ` - Original: $${parseFloat(log.original_amount).toFixed(2)}`;\n            }\n            if (log.cached_amount) {\n                logLine += ` - Cached: $${parseFloat(log.cached_amount).toFixed(2)}`;\n            }\n            if (log.total_sent) {\n                logLine += ` - Total Sent: $${parseFloat(log.total_sent).toFixed(2)}`;\n            }\n            logLine += ` - ${log.message}`;\n            return logLine;\n        }).join('\\n');\n        return res.status(200).json({\n            logs: formattedLogs,\n            rawLogs: logs,\n            count: logs.length,\n            note: \"Logs are now stored persistently in MySQL database.\"\n        });\n    } catch (error) {\n        console.error('Error reading logs:', error);\n        return res.status(500).json({\n            error: error.message,\n            message: 'Failed to read logs from database'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9yZWFkLWxvZ3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSwrQkFBK0I7QUFDdUI7QUFFdkMsZUFBZUMsUUFBUUMsR0FBRyxFQUFFQyxHQUFHO0lBQzVDLElBQUk7UUFDRixNQUFNQyxRQUFRQyxTQUFTSCxJQUFJSSxLQUFLLENBQUNGLEtBQUssS0FBSztRQUMzQyxNQUFNRyxPQUFPLE1BQU1QLCtEQUFhQSxDQUFDSTtRQUVqQyxJQUFJRyxLQUFLQyxNQUFNLEtBQUssR0FBRztZQUNyQixPQUFPTCxJQUFJTSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUMxQkgsTUFBTSxFQUFFO2dCQUNSSSxTQUFTO2dCQUNUQyxPQUFPO1lBQ1Q7UUFDRjtRQUVBLDBCQUEwQjtRQUMxQixNQUFNQyxnQkFBZ0JOLEtBQUtPLEdBQUcsQ0FBQ0MsQ0FBQUE7WUFDN0IsTUFBTUMsWUFBWSxJQUFJQyxLQUFLRixJQUFJRyxVQUFVLEVBQUVDLFdBQVc7WUFDdEQsSUFBSUMsVUFBVSxDQUFDLENBQUMsRUFBRUosVUFBVSxFQUFFLEVBQUVELElBQUlNLE1BQU0sQ0FBQ0MsV0FBVyxJQUFJO1lBRTFELElBQUlQLElBQUlRLE9BQU8sRUFBRTtnQkFDZkgsV0FBVyxDQUFDLEVBQUUsRUFBRUwsSUFBSVEsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUNoQztZQUVBLElBQUlSLElBQUlTLGVBQWUsRUFBRTtnQkFDdkJKLFdBQVcsQ0FBQyxjQUFjLEVBQUVLLFdBQVdWLElBQUlTLGVBQWUsRUFBRUUsT0FBTyxDQUFDLElBQUk7WUFDMUU7WUFFQSxJQUFJWCxJQUFJWSxhQUFhLEVBQUU7Z0JBQ3JCUCxXQUFXLENBQUMsWUFBWSxFQUFFSyxXQUFXVixJQUFJWSxhQUFhLEVBQUVELE9BQU8sQ0FBQyxJQUFJO1lBQ3RFO1lBRUEsSUFBSVgsSUFBSWEsVUFBVSxFQUFFO2dCQUNsQlIsV0FBVyxDQUFDLGdCQUFnQixFQUFFSyxXQUFXVixJQUFJYSxVQUFVLEVBQUVGLE9BQU8sQ0FBQyxJQUFJO1lBQ3ZFO1lBRUFOLFdBQVcsQ0FBQyxHQUFHLEVBQUVMLElBQUlKLE9BQU8sRUFBRTtZQUU5QixPQUFPUztRQUNULEdBQUdTLElBQUksQ0FBQztRQUVSLE9BQU8xQixJQUFJTSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCSCxNQUFNTTtZQUNOaUIsU0FBU3ZCO1lBQ1RLLE9BQU9MLEtBQUtDLE1BQU07WUFDbEJ1QixNQUFNO1FBQ1I7SUFFRixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLHVCQUF1QkE7UUFDckMsT0FBTzdCLElBQUlNLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDMUJzQixPQUFPQSxNQUFNckIsT0FBTztZQUNwQkEsU0FBUztRQUNYO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2JydW5vYWdhbGxpdS9EZXNrdG9wL3Bvc3RiYWNrL3Bvc3RiYWNrLWZpbmFsOC9wYWdlcy9hcGkvcmVhZC1sb2dzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGU6IHBhZ2VzL2FwaS9yZWFkLWxvZ3MuanNcbmltcG9ydCB7IGdldFJlY2VudExvZ3MgfSBmcm9tICcuLi8uLi9saWIvZGF0YWJhc2UuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgbGltaXQgPSBwYXJzZUludChyZXEucXVlcnkubGltaXQpIHx8IDEwMDtcbiAgICBjb25zdCBsb2dzID0gYXdhaXQgZ2V0UmVjZW50TG9ncyhsaW1pdCk7XG4gICAgXG4gICAgaWYgKGxvZ3MubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBcbiAgICAgICAgbG9nczogW10sXG4gICAgICAgIG1lc3NhZ2U6ICdObyBsb2dzIGZvdW5kLiBUcnkgbWFraW5nIGEgY29udmVyc2lvbiByZXF1ZXN0IGZpcnN0LicsXG4gICAgICAgIGNvdW50OiAwXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gRm9ybWF0IGxvZ3MgZm9yIGRpc3BsYXlcbiAgICBjb25zdCBmb3JtYXR0ZWRMb2dzID0gbG9ncy5tYXAobG9nID0+IHtcbiAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IG5ldyBEYXRlKGxvZy5jcmVhdGVkX2F0KS50b0lTT1N0cmluZygpO1xuICAgICAgbGV0IGxvZ0xpbmUgPSBgWyR7dGltZXN0YW1wfV0gJHtsb2cuYWN0aW9uLnRvVXBwZXJDYXNlKCl9YDtcbiAgICAgIFxuICAgICAgaWYgKGxvZy5jbGlja2lkKSB7XG4gICAgICAgIGxvZ0xpbmUgKz0gYCAoJHtsb2cuY2xpY2tpZH0pYDtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKGxvZy5vcmlnaW5hbF9hbW91bnQpIHtcbiAgICAgICAgbG9nTGluZSArPSBgIC0gT3JpZ2luYWw6ICQke3BhcnNlRmxvYXQobG9nLm9yaWdpbmFsX2Ftb3VudCkudG9GaXhlZCgyKX1gO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAobG9nLmNhY2hlZF9hbW91bnQpIHtcbiAgICAgICAgbG9nTGluZSArPSBgIC0gQ2FjaGVkOiAkJHtwYXJzZUZsb2F0KGxvZy5jYWNoZWRfYW1vdW50KS50b0ZpeGVkKDIpfWA7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmIChsb2cudG90YWxfc2VudCkge1xuICAgICAgICBsb2dMaW5lICs9IGAgLSBUb3RhbCBTZW50OiAkJHtwYXJzZUZsb2F0KGxvZy50b3RhbF9zZW50KS50b0ZpeGVkKDIpfWA7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGxvZ0xpbmUgKz0gYCAtICR7bG9nLm1lc3NhZ2V9YDtcbiAgICAgIFxuICAgICAgcmV0dXJuIGxvZ0xpbmU7XG4gICAgfSkuam9pbignXFxuJyk7XG4gICAgXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgXG4gICAgICBsb2dzOiBmb3JtYXR0ZWRMb2dzLFxuICAgICAgcmF3TG9nczogbG9ncyxcbiAgICAgIGNvdW50OiBsb2dzLmxlbmd0aCxcbiAgICAgIG5vdGU6IFwiTG9ncyBhcmUgbm93IHN0b3JlZCBwZXJzaXN0ZW50bHkgaW4gTXlTUUwgZGF0YWJhc2UuXCJcbiAgICB9KTtcbiAgICBcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciByZWFkaW5nIGxvZ3M6JywgZXJyb3IpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IFxuICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIHJlYWQgbG9ncyBmcm9tIGRhdGFiYXNlJ1xuICAgIH0pO1xuICB9XG59Il0sIm5hbWVzIjpbImdldFJlY2VudExvZ3MiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibGltaXQiLCJwYXJzZUludCIsInF1ZXJ5IiwibG9ncyIsImxlbmd0aCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiY291bnQiLCJmb3JtYXR0ZWRMb2dzIiwibWFwIiwibG9nIiwidGltZXN0YW1wIiwiRGF0ZSIsImNyZWF0ZWRfYXQiLCJ0b0lTT1N0cmluZyIsImxvZ0xpbmUiLCJhY3Rpb24iLCJ0b1VwcGVyQ2FzZSIsImNsaWNraWQiLCJvcmlnaW5hbF9hbW91bnQiLCJwYXJzZUZsb2F0IiwidG9GaXhlZCIsImNhY2hlZF9hbW91bnQiLCJ0b3RhbF9zZW50Iiwiam9pbiIsInJhd0xvZ3MiLCJub3RlIiwiZXJyb3IiLCJjb25zb2xlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/read-logs.js\n");

/***/ }),

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fread-logs&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fread-logs.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();
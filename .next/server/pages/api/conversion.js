"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/conversion";
exports.ids = ["pages/api/conversion"];
exports.modules = {

/***/ "(api-node)/./lib/database.js":
/*!*************************!*\
  !*** ./lib/database.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addCachedConversion: () => (/* binding */ addCachedConversion),\n/* harmony export */   clearAllCachedConversions: () => (/* binding */ clearAllCachedConversions),\n/* harmony export */   clearCachedConversions: () => (/* binding */ clearCachedConversions),\n/* harmony export */   getCachedTotal: () => (/* binding */ getCachedTotal),\n/* harmony export */   getGlobalCachedTotal: () => (/* binding */ getGlobalCachedTotal),\n/* harmony export */   getPool: () => (/* binding */ getPool),\n/* harmony export */   getRecentLogs: () => (/* binding */ getRecentLogs),\n/* harmony export */   initializeDatabase: () => (/* binding */ initializeDatabase),\n/* harmony export */   logConversion: () => (/* binding */ logConversion),\n/* harmony export */   logPostback: () => (/* binding */ logPostback)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n// File: lib/database.js\n\n// Database connection configuration\nconst dbConfig = {\n    host: process.env.DB_HOST,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_NAME,\n    port: process.env.DB_PORT || 3306,\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0,\n    // Disable SSL since GoDaddy server doesn't support it\n    ssl: false\n};\n// Create connection pool\nlet pool;\nfunction getPool() {\n    if (!pool) {\n        pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createPool(dbConfig);\n    }\n    return pool;\n}\n// Initialize database tables\nasync function initializeDatabase() {\n    const connection = await getPool().getConnection();\n    try {\n        // Create cached_conversions table\n        await connection.execute(`\n      CREATE TABLE IF NOT EXISTS cached_conversions (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        clickid VARCHAR(255) NOT NULL,\n        amount DECIMAL(10,2) NOT NULL,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        INDEX idx_clickid (clickid),\n        INDEX idx_created_at (created_at)\n      )\n    `);\n        // Create conversion_logs table\n        await connection.execute(`\n      CREATE TABLE IF NOT EXISTS conversion_logs (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        clickid VARCHAR(255),\n        original_amount DECIMAL(10,2),\n        cached_amount DECIMAL(10,2),\n        total_sent DECIMAL(10,2),\n        action VARCHAR(50),\n        message TEXT,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        INDEX idx_clickid (clickid),\n        INDEX idx_created_at (created_at)\n      )\n    `);\n        // Create postback_history table\n        await connection.execute(`\n      CREATE TABLE IF NOT EXISTS postback_history (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        clickid VARCHAR(255) NOT NULL,\n        amount DECIMAL(10,2) NOT NULL,\n        postback_url TEXT,\n        success BOOLEAN DEFAULT FALSE,\n        response_text TEXT,\n        error_message TEXT,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        INDEX idx_clickid (clickid),\n        INDEX idx_success (success),\n        INDEX idx_created_at (created_at)\n      )\n    `);\n        console.log('Database tables initialized successfully');\n    } catch (error) {\n        console.error('Error initializing database:', error);\n        throw error;\n    } finally{\n        connection.release();\n    }\n}\n// Database helper functions\nasync function addCachedConversion(clickid, amount) {\n    const connection = await getPool().getConnection();\n    try {\n        const [result] = await connection.execute('INSERT INTO cached_conversions (clickid, amount) VALUES (?, ?)', [\n            clickid,\n            amount\n        ]);\n        return result.insertId;\n    } finally{\n        connection.release();\n    }\n}\nasync function getGlobalCachedTotal() {\n    const connection = await getPool().getConnection();\n    try {\n        const [rows] = await connection.execute('SELECT COALESCE(SUM(amount), 0) as total FROM cached_conversions');\n        return parseFloat(rows[0].total);\n    } finally{\n        connection.release();\n    }\n}\nasync function clearAllCachedConversions() {\n    const connection = await getPool().getConnection();\n    try {\n        const [result] = await connection.execute('DELETE FROM cached_conversions');\n        return result.affectedRows;\n    } finally{\n        connection.release();\n    }\n}\nasync function getCachedTotal(clickid) {\n    // For backward compatibility, but now returns global total\n    return await getGlobalCachedTotal();\n}\nasync function clearCachedConversions(clickid) {\n    // For backward compatibility, but now clears all cache\n    return await clearAllCachedConversions();\n}\nasync function logConversion(data) {\n    const connection = await getPool().getConnection();\n    try {\n        const [result] = await connection.execute(`INSERT INTO conversion_logs \n       (clickid, original_amount, cached_amount, total_sent, action, message) \n       VALUES (?, ?, ?, ?, ?, ?)`, [\n            data.clickid || null,\n            data.original_amount || null,\n            data.cached_amount || null,\n            data.total_sent || null,\n            data.action || '',\n            data.message || ''\n        ]);\n        return result.insertId;\n    } finally{\n        connection.release();\n    }\n}\nasync function logPostback(clickid, amount, postback_url, success, response_text = null, error_message = null) {\n    const connection = await getPool().getConnection();\n    try {\n        const [result] = await connection.execute(`INSERT INTO postback_history \n       (clickid, amount, postback_url, success, response_text, error_message) \n       VALUES (?, ?, ?, ?, ?, ?)`, [\n            clickid,\n            amount,\n            postback_url,\n            success,\n            response_text,\n            error_message\n        ]);\n        return result.insertId;\n    } finally{\n        connection.release();\n    }\n}\nasync function getRecentLogs(limit = 100) {\n    const connection = await getPool().getConnection();\n    try {\n        const [rows] = await connection.execute(`SELECT * FROM conversion_logs \n       ORDER BY created_at DESC \n       LIMIT ?`, [\n            limit\n        ]);\n        return rows;\n    } finally{\n        connection.release();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/database.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fconversion&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fconversion.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fconversion&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fconversion.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_conversion_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/api/conversion.js */ \"(api-node)/./pages/api/conversion.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_conversion_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_conversion_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/conversion\",\n        pathname: \"/api/conversion\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_conversion_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/conversion\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/conversion\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fconversion&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fconversion.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/conversion.js":
/*!*********************************!*\
  !*** ./pages/api/conversion.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_database_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/database.js */ \"(api-node)/./lib/database.js\");\n\nasync function handler(req, res) {\n    try {\n        await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.initializeDatabase)();\n        const { clickid, sum } = req.query;\n        const sumValue = parseFloat(sum || 0);\n        await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.logConversion)({\n            clickid,\n            original_amount: sumValue,\n            action: 'request_received',\n            message: `Request received: clickid=${clickid}, sum=${sum}`\n        });\n        if (!clickid || sumValue <= 0) {\n            await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.logConversion)({\n                clickid,\n                original_amount: sumValue,\n                action: 'validation_failed',\n                message: `Invalid input rejected: clickid=${clickid}, sum=${sum}`\n            });\n            return res.status(200).send(\"0\");\n        }\n        const cachedTotal = await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.getCachedTotal)();\n        await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.logConversion)({\n            clickid,\n            original_amount: sumValue,\n            cached_amount: cachedTotal,\n            action: 'cache_loaded',\n            message: `GLOBAL cached total: $${cachedTotal.toFixed(2)}, New conversion: $${sumValue.toFixed(2)}`\n        });\n        if (sumValue < 10) {\n            await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.addCachedConversion)(clickid, sumValue);\n            const newCachedTotal = await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalCachedTotal)();\n            await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.logConversion)({\n                clickid,\n                original_amount: sumValue,\n                cached_amount: newCachedTotal,\n                action: 'cached_conversion',\n                message: `Cached sub-$10 conversion ($${sumValue.toFixed(2)}). New GLOBAL total cached: $${newCachedTotal.toFixed(2)}`\n            });\n            return res.status(200).send(\"1\");\n        }\n        const totalToSend = sumValue + cachedTotal;\n        const redtrackUrl = `https://clks.trackthisclicks.com/postback?clickid=${encodeURIComponent(clickid)}&sum=${encodeURIComponent(totalToSend)}`;\n        await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.logConversion)({\n            clickid,\n            original_amount: sumValue,\n            cached_amount: cachedTotal,\n            total_sent: totalToSend,\n            action: 'preparing_postback',\n            message: `Preparing to send postback to RedTrack. Total: $${totalToSend.toFixed(2)} (Current conversion: $${sumValue.toFixed(2)} + Global cache: $${cachedTotal.toFixed(2)}), clickid: ${clickid}`\n        });\n        if (cachedTotal > 0) {\n            const clearedRows = await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.clearAllCachedConversions)();\n            await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.logConversion)({\n                clickid,\n                original_amount: sumValue,\n                cached_amount: cachedTotal,\n                total_sent: totalToSend,\n                action: 'global_cache_cleared',\n                message: `GLOBAL cache cleared before postback. Removed ${clearedRows} cached entries from ALL clickids. Total to send: $${totalToSend.toFixed(2)}`\n            });\n        }\n        let postbackSuccess = false;\n        let responseText = '';\n        let errorMessage = null;\n        try {\n            const response = await fetch(redtrackUrl);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            responseText = await response.text();\n            postbackSuccess = true;\n            await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.logConversion)({\n                clickid,\n                original_amount: sumValue,\n                cached_amount: cachedTotal,\n                total_sent: totalToSend,\n                action: 'postback_success',\n                message: `Postback successful. Response: ${responseText}`\n            });\n        } catch (error) {\n            errorMessage = error.message;\n            await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.logConversion)({\n                clickid,\n                original_amount: sumValue,\n                cached_amount: cachedTotal,\n                total_sent: totalToSend,\n                action: 'postback_failed',\n                message: `Error sending postback: ${error.message}`\n            });\n        }\n        await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.logPostback)(clickid, totalToSend, redtrackUrl, postbackSuccess, responseText, errorMessage);\n        if (postbackSuccess) {\n            return res.status(200).send(\"2\");\n        } else {\n            return res.status(200).send(\"3\");\n        }\n    } catch (error) {\n        console.error('Database error:', error);\n        try {\n            await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_0__.logConversion)({\n                clickid: req.query.clickid,\n                action: 'system_error',\n                message: `System error: ${error.message}`\n            });\n        } catch (logError) {\n            console.error('Failed to log error:', logError);\n        }\n        return res.status(200).send(\"4\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/conversion.js\n");

/***/ }),

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fconversion&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fconversion.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();